name: Lint

on:
  push:
    branches:
      - main
  pull_request:
  # Allow to trigger the workflow manually
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  CUDA_VERSION: "11.7"

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          update-environment: true

      - name: Setup CUDA Toolkit
        id: cuda-toolkit
        run: |
          CUDA_PKG_SUFFIX="$(echo "${CUDA_VERSION}" | cut -d'.' -f-2 | tr '.' '-')"
          sudo apt-get update && sudo apt-get install wget --yes
          (
            source /etc/os-release
            wget -O cuda-keyring.deb "https://developer.download.nvidia.com/compute/cuda/repos/ubuntu${VERSION_ID//./}/$(uname -m)/cuda-keyring_1.0-1_all.deb"
            sudo dpkg -i cuda-keyring.deb
          )
          sudo apt-get update && sudo apt-get install "cuda-minimal-build-${CUDA_PKG_SUFFIX}" --yes
          echo "PATH=/usr/local/cuda/bin${PATH:+:${PATH}}" >> "${GITHUB_ENV}"
          echo "LD_LIBRARY_PATH=/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}" >> "${GITHUB_ENV}"

          PIP_EXTRA_INDEX_URL="https://download.pytorch.org/whl/cu$(echo "${CUDA_PKG_SUFFIX}" | tr -d '-')"
          echo "PIP_EXTRA_INDEX_URL=${PIP_EXTRA_INDEX_URL}" >> "${GITHUB_ENV}"
          echo "Installed CUDA version is: ${CUDA_VERSION}"
          /usr/local/cuda/bin/nvcc -V
          echo "Torch index URL: ${PIP_EXTRA_INDEX_URL}"

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install TorchOpt
        env:
          USE_FP16: "OFF"
          TORCH_CUDA_ARCH_LIST: "Auto"
        run: |
          python -m pip install torch numpy pybind11
          python -m pip install -vvv --no-build-isolation --editable '.[lint]'

      - name: pre-commit
        run: |
          make pre-commit

      - name: ruff
        run: |
          make ruff

      - name: flake8
        run: |
          make flake8

      - name: pylint
        run: |
          make pylint

      - name: isort and black
        run: |
          make py-format

      - name: cpplint
        run: |
          make cpplint

      - name: clang-tidy
        run: |
          sudo apt-get update && sudo apt-get install libomp-dev --yes
          make clang-tidy

      - name: clang-format
        run: |
          (
            source /etc/os-release
            wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
            sudo add-apt-repository "deb http://apt.llvm.org/${UBUNTU_CODENAME} llvm-toolchain-${UBUNTU_CODENAME} main" --yes
          )
          sudo apt-get update && sudo apt-get install clang-format --yes
          make clang-format

      - name: addlicense
        run: |
          make addlicense

      - name: mypy
        run: |
          make mypy

      - name: Install dependencies
        run: |
          python -m pip install -r docs/requirements.txt

      - name: docstyle
        run: |
          make docstyle

      - name: spelling
        run: |
          make spelling
