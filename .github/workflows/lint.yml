name: Lint

on:
  push:
    branches:
      - main
  pull_request:
  # Allow to trigger the workflow manually
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.7" # the lowest version we support (sync with requires-python in pyproject.toml)
          update-environment: true

      - name: Setup CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.7
        id: cuda-toolkit
        with:
          cuda: "11.7.1"
          method: network
          sub-packages: '["nvcc"]'
      - run: |
          CUDA_VERSION="${{steps.cuda-toolkit.outputs.cuda}}"
          echo "CUDA_VERSION=${CUDA_VERSION}" >> "${GITHUB_ENV}"
          PIP_EXTRA_INDEX_URL="https://download.pytorch.org/whl/cu$(echo "${CUDA_VERSION}" | cut -d'.' -f-2  | tr -d '.')"
          echo "PIP_EXTRA_INDEX_URL=${PIP_EXTRA_INDEX_URL}" >> "${GITHUB_ENV}"

          echo "Installed CUDA version is: ${CUDA_VERSION}"
          echo "CUDA install location: ${{steps.cuda-toolkit.outputs.CUDA_PATH}}"
          nvcc -V
          echo "Torch index URL: ${PIP_EXTRA_INDEX_URL}"

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install TorchOpt
        env:
          USE_FP16: "OFF"
          TORCH_CUDA_ARCH_LIST: "Auto"
        run: |
          python -m pip install torch numpy pybind11
          python -m pip install -vvv --no-build-isolation --editable '.[lint]'

      - name: pre-commit
        run: |
          make pre-commit

      - name: flake8
        run: |
          make flake8

      - name: pylint
        run: |
          make pylint

      - name: isort and black
        run: |
          make py-format

      - name: cpplint
        run: |
          make cpplint

      - name: clang-format
        run: |
          make clang-format

      - name: addlicense
        run: |
          make addlicense

      - name: Install dev version of mypy
        run: |
          python -m pip install git+https://github.com/python/mypy.git
          python -m pip install types-setuptools

      - name: mypy
        run: |
          make mypy

      - name: Install dependencies
        run: |
          python -m pip install -r docs/requirements.txt

      - name: docstyle
        run: |
          make docstyle

      - name: spelling
        run: |
          make spelling
